export const CUSTOM_ERROR_SOURCE = `
  pragma solidity ^0.8.0;

  error One(uint value, string msg, bytes32 encoded);
  error Two(uint256[3] value, bytes32[2] encoded);

  contract Matchers {
    function doRevertWithOne() public pure {
      revert One(0, 'message', 0x00cFBbaF7DDB3a1476767101c12a0162e241fbAD2a0162e2410cFBbaF7162123);
    }

    function doRevertWithTwo() public pure {
      revert Two(
        [
          uint256(1),
          uint256(2),
          uint256(3)
        ],
        [
          bytes32(0x00cFBbaF7DDB3a1476767101c12a0162e241fbAD2a0162e2410cFBbaF7162123),
          bytes32(0x00cFBbaF7DDB3a1476767101c12a0162e241fbAD2a0162e2410cFBbaF7162124)
        ]
      );
    }
  }
`

export const customErrorContractABI = {
  contractName: 'Matchers',
  abi: [
    {
      inputs: [
        {
          internalType: 'uint256',
          name: 'value',
          type: 'uint256',
        },
        {
          internalType: 'string',
          name: 'msg',
          type: 'string',
        },
        {
          internalType: 'bytes32',
          name: 'encoded',
          type: 'bytes32',
        },
      ],
      name: 'One',
      type: 'error',
    },
    {
      inputs: [
        {
          internalType: 'uint256[3]',
          name: 'value',
          type: 'uint256[3]',
        },
        {
          internalType: 'bytes32[2]',
          name: 'encoded',
          type: 'bytes32[2]',
        },
      ],
      name: 'Two',
      type: 'error',
    },
    {
      inputs: [],
      name: 'doRevertWithOne',
      outputs: [],
      stateMutability: 'pure',
      type: 'function',
    },
    {
      inputs: [],
      name: 'doRevertWithTwo',
      outputs: [],
      stateMutability: 'pure',
      type: 'function',
    },
  ],
  bytecode:
    '0x608060405234801561001057600080fd5b50610451806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063092461c21461003b578063d950ca9314610045575b600080fd5b61004361004f565b005b61004d610103565b005b60405180606001604052806001815260200160028152602001600381525060405180604001604052807ecfbbaf7ddb3a1476767101c12a0162e241fbad2a0162e2410cfbbaf716212360001b81526020017ecfbbaf7ddb3a1476767101c12a0162e241fbad2a0162e2410cfbbaf716212460001b8152506040517f36cc9d480000000000000000000000000000000000000000000000000000000081526004016100fa9291906102cc565b60405180910390fd5b60007ecfbbaf7ddb3a1476767101c12a0162e241fbad2a0162e2410cfbbaf71621236040517f824e79180000000000000000000000000000000000000000000000000000000081526004016101599291906103df565b60405180910390fd5b600060039050919050565b600081905092915050565b6000819050919050565b6000819050919050565b61019581610182565b82525050565b60006101a7838361018c565b60208301905092915050565b6000602082019050919050565b6101c981610162565b6101d3818461016d565b92506101de82610178565b8060005b8381101561020f5781516101f6878261019b565b9650610201836101b3565b9250506001810190506101e2565b505050505050565b600060029050919050565b600081905092915050565b6000819050919050565b6000819050919050565b61024a81610237565b82525050565b600061025c8383610241565b60208301905092915050565b6000602082019050919050565b61027e81610217565b6102888184610222565b92506102938261022d565b8060005b838110156102c45781516102ab8782610250565b96506102b683610268565b925050600181019050610297565b505050505050565b600060a0820190506102e160008301856101c0565b6102ee6060830184610275565b9392505050565b6000819050919050565b6000819050919050565b600061032461031f61031a846102f5565b6102ff565b610182565b9050919050565b61033481610309565b82525050565b600082825260208201905092915050565b7f6d65737361676500000000000000000000000000000000000000000000000000600082015250565b600061038160078361033a565b915061038c8261034b565b602082019050919050565b6000819050919050565b60008160001b9050919050565b60006103c96103c46103bf84610397565b6103a1565b610237565b9050919050565b6103d9816103ae565b82525050565b60006060820190506103f4600083018561032b565b818103602083015261040581610374565b905061041460408301846103d0565b939250505056fea2646970667358221220777826c7aea17a5fde1ed02ba4899de54c8bd2f0105b549419eafe6a62416b1a64736f6c634300080a0033',
}
